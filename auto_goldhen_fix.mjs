/* Copyright (C) 2025 anonymous

This file is part of PSFree.

PSFree is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

PSFree is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∏–∫—Å –¥–ª—è GoldHEN - –ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–≤–∏—Å–∞–Ω–∏—è –∏–≥—Ä
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ GoldHEN –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏

import { log, sleep } from './module/utils.mjs';
import { fixGoldHENPlugins, shouldApplyPluginsFix, markPluginsFixApplied, resetPluginsFixFlag } from './goldhen_plugins_fix.mjs';
import { 
    createOptimalConfig, 
    validateGoldHENConfig, 
    debugConfigIssues,
    PROBLEMATIC_GAMES 
} from './goldhen_config_manager.mjs';

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∏–∫—Å–∞
export async function autoFixGoldHEN(chain) {
    log('=== Starting Auto GoldHEN Fix ===');
    
    try {
        // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ —Ñ–∏–∫—Å
        if (!shouldApplyPluginsFix()) {
            log('GoldHEN plugins fix already applied this session, skipping...');
            return { success: true, skipped: true };
        }
        
        // –®–∞–≥ 2: –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ GoldHEN
        log('Waiting for GoldHEN to fully initialize...');
        await sleep(1500);
        
        // –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∏–∫—Å –ø–ª–∞–≥–∏–Ω–æ–≤
        log('Applying plugins reactivation fix...');
        const fixResult = await fixGoldHENPlugins(chain);
        
        if (!fixResult) {
            log('Warning: Plugins fix failed, but continuing...');
        }
        
        // –®–∞–≥ 4: –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é GoldHEN
        log('Optimizing GoldHEN configuration...');
        await optimizeGoldHENConfig(chain);
        
        // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å
        log('Verifying fix application...');
        const verifyResult = await verifyFixApplication();
        
        // –®–∞–≥ 6: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
        if (verifyResult.success) {
            markPluginsFixApplied();
            log('=== Auto GoldHEN Fix Completed Successfully ===');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            displaySuccessMessage();
            
            return { 
                success: true, 
                pluginsFix: fixResult,
                configOptimized: true,
                verified: verifyResult
            };
        } else {
            log('=== Auto GoldHEN Fix Completed with Issues ===');
            return { 
                success: false, 
                issues: verifyResult.issues 
            };
        }
        
    } catch (error) {
        log(`Error in auto GoldHEN fix: ${error}`);
        return { success: false, error: error.toString() };
    }
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é GoldHEN –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
async function optimizeGoldHENConfig(chain) {
    try {
        // –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        const optimalConfig = createOptimalConfig();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –≤—ã–∑–æ–≤—ã
        const configPath = '/data/GoldHEN/config.ini';
        const fd = chain.sysi('open', configPath, 0x601); // O_WRONLY | O_CREAT
        
        if (fd >= 0) {
            chain.sysi('write', fd, optimalConfig, optimalConfig.length);
            chain.sysi('close', fd);
            log('GoldHEN configuration optimized');
            return true;
        } else {
            log('Warning: Could not write optimal configuration');
            return false;
        }
    } catch (error) {
        log(`Error optimizing config: ${error}`);
        return false;
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–∫—Å–∞
async function verifyFixApplication() {
    const checks = [];
    
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage —Ñ–ª–∞–≥–∏
        const localStorageFlag = localStorage.getItem('goldhen_plugins_fixed') === 'true';
        checks.push({
            name: 'LocalStorage flag',
            success: localStorageFlag,
            details: localStorageFlag ? 'Set correctly' : 'Not set'
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage —Ñ–ª–∞–≥–∏  
        const sessionStorageFlag = sessionStorage.getItem('goldhen_plugins_fixed') === 'true';
        checks.push({
            name: 'SessionStorage flag', 
            success: sessionStorageFlag,
            details: sessionStorageFlag ? 'Set correctly' : 'Not set'
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É GoldHEN
        const goldhenLoaded = localStorage.getItem('ExploitLoaded') === 'yes';
        checks.push({
            name: 'GoldHEN loaded',
            success: goldhenLoaded,
            details: goldhenLoaded ? 'Loaded successfully' : 'Not loaded'
        });
        
        const allSuccess = checks.every(check => check.success);
        const issues = checks.filter(check => !check.success);
        
        return {
            success: allSuccess,
            checks: checks,
            issues: issues
        };
        
    } catch (error) {
        return {
            success: false,
            error: error.toString(),
            checks: checks
        };
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–∫—Å–∞
function displaySuccessMessage() {
    const message = `
‚úÖ GoldHEN Auto-Fix Applied Successfully!

üéÆ –ò–≥—Ä—ã —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∞–Ω–∏—è.

üîß –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏–≥—Ä—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã:
‚Ä¢ Need for Speed Heat
‚Ä¢ God of War: Ragnar√∂k  
‚Ä¢ Cyberpunk 2077
‚Ä¢ –ò –¥—Ä—É–≥–∏–µ...

‚ö° –ü–ª–∞–≥–∏–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã.
üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.

–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏–≥—Ä–æ–π!
    `;
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
    log(message);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ UI –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    sessionStorage.setItem('goldhen_fix_message', message);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–∫—Å–∞
export async function forceReapplyFix(chain) {
    log('Force reapplying GoldHEN fix...');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏
    resetPluginsFixFlag();
    localStorage.removeItem('ExploitLoaded');
    sessionStorage.removeItem('ExploitLoaded');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–∫—Å –∑–∞–Ω–æ–≤–æ
    return await autoFixGoldHEN(chain);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–∞ –ø—Ä–æ–±–ª–µ–º–Ω–æ–π (—Ç—Ä–µ–±—É—é—â–µ–π —Ñ–∏–∫—Å–∞)
export function isProblematicGame(gameTitle) {
    return PROBLEMATIC_GAMES.some(problematicGame => 
        gameTitle.toLowerCase().includes(problematicGame.toLowerCase())
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å GoldHEN
export async function debugGoldHENIssues(chain) {
    log('=== GoldHEN Debug Information ===');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —ç–∫—Å–ø–ª–æ–π—Ç–∞
    const exploitLoaded = localStorage.getItem('ExploitLoaded');
    log(`Exploit loaded: ${exploitLoaded}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥–∏ —Ñ–∏–∫—Å–∞
    const pluginsFixed = localStorage.getItem('goldhen_plugins_fixed');
    log(`Plugins fix applied: ${pluginsFixed}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
    const sessionExploit = sessionStorage.getItem('ExploitLoaded');
    const sessionPlugins = sessionStorage.getItem('goldhen_plugins_fixed');
    log(`Session exploit: ${sessionExploit}`);
    log(`Session plugins fix: ${sessionPlugins}`);
    
    // –ü–æ–ø—ã—Ç–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ GoldHEN
    try {
        const configPath = '/data/GoldHEN/config.ini';
        const fd = chain.sysi('open', configPath, 0); // O_RDONLY
        
        if (fd >= 0) {
            log('GoldHEN config file accessible');
            chain.sysi('close', fd);
        } else {
            log('Warning: GoldHEN config file not accessible');
        }
    } catch (error) {
        log(`Error checking config: ${error}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∏–≥—Ä—ã
    log('Problematic games list:');
    PROBLEMATIC_GAMES.forEach((game, index) => {
        log(`  ${index + 1}. ${game}`);
    });
    
    log('=== End Debug Information ===');
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export default {
    autoFixGoldHEN,
    forceReapplyFix,
    isProblematicGame,
    debugGoldHENIssues,
    verifyFixApplication,
    optimizeGoldHENConfig
};
